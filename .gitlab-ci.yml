stages:
  - build

variables:
  PYTHONUNBUFFERED: "1"
  DRAKE_DEBUG_BACKTRACE: "1"

x86_64-centos6-gcc4:
  stage: build
  script:
    - export DRAKE_MTIME=0 # rsync and mtime comparisons don't play along very well
    - export DRAKE_EXPLAIN=1
    - git submodule sync
    - git submodule update --init --recursive --force
    - git fetch origin --tags
    - pip3 install -r drake/requirements.txt
    - SOURCE_DIR="${CI_PROJECT_DIR}"
    - BUILD_DIR="$(dirname ${CI_PROJECT_DIR})/${CI_PROJECT_NAME}-build"
    - INSTALL_DIR="${SOURCE_DIR}/_install"
    - DESC=$(git describe)
    - time scl enable devtoolset-4 rh-python34 "./buildenv --pick-build-tree --branch \"$CI_BUILD_REF_NAME\" --link-build-tree \"$BUILD_DIR\" --build-trees-root \"/cache/$CI_PROJECT_NAME\""
    - if test -n "$FROM_SCRATCH"; then dir=$(readlink -f $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time scl enable devtoolset-4 rh-python34 "./buildenv --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch \"$CI_BUILD_REF_NAME\" --build-trees-root \"/cache/$CI_PROJECT_NAME\" --cache-namespace \"$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME\" --cache-id \"$CI_RUNNER_ID\" --verbose"; fi
    - mkdir -p "$INSTALL_DIR"
    - scl enable devtoolset-4 rh-python34 "farm/configure --arch x86_64 --os centos6 --compiler gcc4 --project Elle --source-dir \"$SOURCE_DIR\" --build-dir \"$BUILD_DIR\" --install-dir \"$INSTALL_DIR\""
    - cd "$BUILD_DIR"
    - scl enable devtoolset-4 rh-python34 "python3 drake -j $(nproc) //build"
    - scl enable devtoolset-4 rh-python34 "python3 drake -j $(nproc) //check"
    - scl enable devtoolset-4 rh-python34 "python3 drake -j $(nproc) //install"
    - TARBALL="elle-x86_64-centos6-gcc4-$DESC.tbz"
    - tar -cvjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - cd "$SOURCE_DIR"
    - time scl enable devtoolset-4 rh-python34 "./buildenv --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch \"$CI_BUILD_REF_NAME\" --build-trees-root \"/cache/$CI_PROJECT_NAME\" --cache-namespace \"$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME\" --cache-id \"$CI_RUNNER_ID\" --verbose"
  tags:
    - x86_64
    - centos6
    - gcc4

x86_64-ubuntu-gcc4:
  stage: build
  script:
    - export DRAKE_MTIME=0 # rsync and mtime comparisons don't play along very well
    - export DRAKE_EXPLAIN=1
    - git submodule sync --recursive
    - git submodule update --init --recursive --force
    - git fetch origin --tags
    - pip3 install -r drake/requirements.txt
    - SOURCE_DIR="${CI_PROJECT_DIR}"
    - BUILD_DIR="$(dirname ${CI_PROJECT_DIR})/${CI_PROJECT_NAME}-build"
    - INSTALL_DIR="${SOURCE_DIR}/_install"
    - DESC=$(git describe)
    - time ./buildenv --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time ./buildenv --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
    - mkdir -p "$INSTALL_DIR"
    - farm/configure --arch x86_64 --os trusty --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - export ELLE_LOG_CHECK_FORMATS=1
    - python3 drake -j $(nproc) //build
    - python3 drake -j $(($(nproc) / 4)) //check
    - python3 drake -j $(nproc) //install
    - python3 drake -j $(nproc) //docker
    - TARBALL="$BUILD_DIR/elle-x86_64-ubuntu-gcc4-$DESC.tbz"
    - tar -cvjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - cd "$SOURCE_DIR"
    - time ./buildenv --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - ubuntu
    - gcc4

x86_64-jessie-gcc4:
  stage: build
  script:
    - export DRAKE_MTIME=0 # rsync and mtime comparisons don't play along very well
    - export DRAKE_EXPLAIN=1
    - git submodule sync --recursive
    - git submodule update --init --recursive --force
    - git fetch origin --tags
    - pip3 install -r drake/requirements.txt
    - SOURCE_DIR="${CI_PROJECT_DIR}"
    - BUILD_DIR="$(dirname ${CI_PROJECT_DIR})/${CI_PROJECT_NAME}-build"
    - INSTALL_DIR="${SOURCE_DIR}/_install"
    - DESC=$(git describe)
    - time ./buildenv --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time ./buildenv --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
    - mkdir -p "$INSTALL_DIR"
    - farm/configure --arch x86_64 --os jessie --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - python3 drake -j $(nproc) //build
    - python3 drake -j $(nproc) //check
    - python3 drake -j $(nproc) //install
    - TARBALL="$BUILD_DIR/elle-x86_64-jessie-gcc4-$DESC.tbz"
    - tar -cvjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - cd "$SOURCE_DIR"
    - time ./buildenv --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - jessie
    - gcc4

x86_64-alpine-gcc:
  stage: build
  script:
    - export DRAKE_MTIME=0 # rsync and mtime comparisons don't play along very well
    - export DRAKE_EXPLAIN=1
    - git submodule sync --recursive
    - git submodule update --init --recursive --force
    - git fetch origin --tags
    - pip3 install -r drake/requirements.txt
    - SOURCE_DIR="${CI_PROJECT_DIR}"
    - BUILD_DIR="$(dirname ${CI_PROJECT_DIR})/${CI_PROJECT_NAME}-build"
    - INSTALL_DIR="${SOURCE_DIR}/_install"
    - DESC=$(git describe)
    - time ./buildenv --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time ./buildenv --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
    - mkdir -p "${BUILD_DIR}" "${INSTALL_DIR}"
    - farm/configure --arch x86_64 --os alpine --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - python3 drake -j $(nproc) //build
    - python3 drake -j $(nproc) //check
    - python3 drake -j $(nproc) //install
    - TARBALL="$BUILD_DIR/elle-x86_64-alpine-gcc-$DESC.tbz"
    - tar -cvjf $TARBALL -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - cd "$SOURCE_DIR"
    - time ./buildenv --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose

  tags:
    - x86_64
    - alpine
    - gcc

i386-jessie-gcc4:
  stage: build
  script:
    - export DRAKE_MTIME=0 # rsync and mtime comparisons don't play along very well
    - export DRAKE_EXPLAIN=1
    - git submodule sync --recursive
    - git submodule update --init --recursive --force
    - git fetch origin --tags
    - pip3 install -r drake/requirements.txt
    - SOURCE_DIR="${CI_PROJECT_DIR}"
    - BUILD_DIR="$(dirname ${CI_PROJECT_DIR})/${CI_PROJECT_NAME}-build"
    - INSTALL_DIR="${SOURCE_DIR}/_install"
    - DESC=$(git describe)
    - time ./buildenv --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time ./buildenv --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
    - mkdir -p "$INSTALL_DIR"
    - farm/configure --arch i386 --os jessie --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - python3 drake -j $(nproc) //build
    - python3 drake -j $(nproc) //check
    - python3 drake -j $(nproc) //install
    - TARBALL="$BUILD_DIR/elle-i386-jessie-gcc4-$DESC.tbz"
    - tar -cvjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - cd "$SOURCE_DIR"
    - time ./buildenv --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - i386
    - jessie
    - gcc4

x86_64-windows-mingw4:
  stage: build
  script:
    - export DRAKE_MTIME=0 # rsync and mtime comparisons don't play along very well
    - export DRAKE_EXPLAIN=1
    - git submodule sync --recursive
    - git submodule update --init --recursive --force
    - git fetch origin --tags
    - pip3 install -r drake/requirements.txt
    - SOURCE_DIR="${CI_PROJECT_DIR}"
    - BUILD_DIR="$(dirname ${CI_PROJECT_DIR})/${CI_PROJECT_NAME}-build"
    - INSTALL_DIR="${SOURCE_DIR}/_install"
    - DESC=$(git describe)
    - time ./buildenv --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time ./buildenv --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
    - mkdir -p "$INSTALL_DIR"
    - farm/configure --arch x86_64 --os windows --compiler mingw4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - python3 drake -j $(nproc) //build
    - python3 drake -j $(nproc) //check
    - python3 drake -j $(nproc) //install
    - TARBALL="$BUILD_DIR/elle-x86_64-windows-mingw4-$DESC.tbz"
    - tar -cvjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - cd "$SOURCE_DIR"
    - time ./buildenv --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - windows
    - mingw4

#i686-windows-mingw4:
#  stage: build
#  script:
#    - export DRAKE_MTIME=0 # rsync and mtime comparisons don't play along very well
#    - export DRAKE_EXPLAIN=1
#    - git submodule sync --recursive
#    - git submodule update --init --recursive --force
#    - git fetch origin --tags
#    - mkdir -p ../elle-build ../elle-install
#    - farm/configure --arch i686 --os windows --compiler mingw4 --project Elle --source-dir . --build-dir ../elle-build --install-dir ../elle-install
#    - cd ../elle-build && python3 drake -j $(nproc) //build
#    - cd ../elle-build && python3 drake -j $(nproc) //check
#    - cd ../elle-build && python3 drake -j $(nproc) //install
#  tags:
#    - i686
#    - windows
#    - mingw4

x86_64-osx-clang:
  stage: build
  script:
    - git submodule sync --recursive
    - git submodule update --init --recursive --force
    - git fetch origin --tags
    - SOURCE_DIR=$PWD
    - BUILD_DIR=$SOURCE_DIR/../elle-build
    - INSTALL_DIR=$SOURCE_DIR/../elle-install
    - if test -n "$FROM_SCRATCH"; then rm -rf $BUILD_DIR; fi
    - mkdir -p $BUILD_DIR $INSTALL_DIR
    - farm/configure --arch x86_64 --os osx --compiler clang --project Elle --source-dir $SOURCE_DIR --build-dir $BUILD_DIR --install-dir $INSTALL_DIR
    - cd $BUILD_DIR && python3 drake -j 4 //build
    - cd $BUILD_DIR && python3 drake -j 4 //check
    - cd $BUILD_DIR && python3 drake -j 4 //install
    - TARBALL=elle-x86_64-osx-clang3-$(GIT_DIR=$SOURCE_DIR/.git git describe).tbz
    - gtar -cvjf "../$TARBALL" -C $INSTALL_DIR . --show-transformed-names --transform "s,^\\./,elle-$(GIT_DIR=$SOURCE_DIR/.git git describe)/,"
    - scp "../$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "../$TARBALL"
  tags:
    - x86_64
    - osx
    - clang
