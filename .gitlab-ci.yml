stages:
  - build
  - test
  - install

variables:
  DRAKE_DEBUG_BACKTRACE: "1"
  DRAKE_EXPLAIN: "1"
  DRAKE_MTIME: "0" # rsync and mtime comparisons don't play along very well
  PYTHONUNBUFFERED: "1"
  TARFLAGS: "" # Additional flags, e.g., -v.

before_script:
  - git submodule sync --recursive
  - git submodule update --init --recursive --force
  - git fetch origin --tags
  - pip3 install -r drake/requirements.txt
  - SOURCE_DIR="${CI_PROJECT_DIR}"
  - BUILD_DIR="$(dirname ${CI_PROJECT_DIR})/${CI_PROJECT_NAME}-build"
  - INSTALL_DIR="${SOURCE_DIR}/_install"
  - DESC=$(git describe)

# x86_64-centos6-gcc4:
#   stage: build
#   script:
#     - time scl enable devtoolset-4 rh-python34 "$SOURCE_DIR/buildenv --pick-build-tree --branch \"$CI_BUILD_REF_NAME\" --link-build-tree \"$BUILD_DIR\" --build-trees-root \"/cache/$CI_PROJECT_NAME\""
#     - if test -n "$FROM_SCRATCH"; then dir=$(readlink -f $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time scl enable devtoolset-4 rh-python34 "$SOURCE_DIR/buildenv --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch \"$CI_BUILD_REF_NAME\" --build-trees-root \"/cache/$CI_PROJECT_NAME\" --cache-namespace \"$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME\" --cache-id \"$CI_RUNNER_ID\" --verbose"; fi
#     - mkdir -p "$INSTALL_DIR"
#     - scl enable devtoolset-4 rh-python34 "farm/configure --arch x86_64 --os centos6 --compiler gcc4 --project Elle --source-dir \"$SOURCE_DIR\" --build-dir \"$BUILD_DIR\" --install-dir \"$INSTALL_DIR\""
#     - cd "$BUILD_DIR"
#     - scl enable devtoolset-4 rh-python34 "python3 drake -j $(nproc) //build"
#     - scl enable devtoolset-4 rh-python34 "python3 drake -j $(nproc) //check"
#     - scl enable devtoolset-4 rh-python34 "python3 drake -j $(nproc) //install"
#     - TARBALL="elle-x86_64-centos6-gcc4-$DESC.tbz"
#     - tar $TARFLAGS -cjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
#     - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
#     - rm "$TARBALL"
#     - cd "$SOURCE_DIR"
#     - time scl enable devtoolset-4 rh-python34 "$SOURCE_DIR/buildenv --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch \"$CI_BUILD_REF_NAME\" --build-trees-root \"/cache/$CI_PROJECT_NAME\" --cache-namespace \"$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME\" --cache-id \"$CI_RUNNER_ID\" --verbose"
#   tags:
#     - x86_64
#     - centos6
#     - gcc4

# x86_64-ubuntu-gcc4:
#   stage: build
#   script:
#     - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
#     - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
#     - mkdir -p "$INSTALL_DIR"
#     - farm/configure --arch x86_64 --os trusty --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
#     - cd "$BUILD_DIR"
#     - export ELLE_LOG_CHECK_FORMATS=1
#     - python3 drake -j $(nproc) //build
#     - python3 drake -j $(($(nproc) / 4)) //check
#     - python3 drake -j $(nproc) //install
#     - TARBALL="$BUILD_DIR/elle-x86_64-ubuntu-gcc4-$DESC.tbz"
#     - tar $TARFLAGS -cjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
#     - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
#     - rm "$TARBALL"
#     - python3 drake -j $(nproc) //docker
#     - docker tag elle:${DESC} mefyl/elle:${DESC}
#     - docker push mefyl/elle:${DESC}
#     - docker rmi {,mefyl/}elle:${DESC}
#     - cd "$SOURCE_DIR"
#     - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
#   tags:
#     - x86_64
#     - ubuntu
#     - gcc4

Jessie build:
  stage: build
  script:
    - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
    - mkdir -p "${BUILD_DIR}"
    - farm/configure --arch x86_64 --os jessie --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - python3 drake -j $(nproc) //build //tests
    - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - jessie
    - gcc4

Jessie test:
  stage: test
  dependencies:
    - Jessie build
  script:
    - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
    - cd "${BUILD_DIR}"
    - python3 drake -j $(nproc) //check
    - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - jessie
    - gcc4

Jessie install:
  stage: install
  dependencies:
    - Jessie test
  script:
    - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
    - mkdir -p "${INSTALL_DIR}"
    - cd "${BUILD_DIR}"
    - python3 drake -j $(nproc) //install
    - TARBALL="$BUILD_DIR/elle-x86_64-jessie-gcc4-$DESC.tbz"
    - tar $TARFLAGS -cjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - jessie
    - gcc4

Alpine build:
  stage: build
  script:
    - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
    - mkdir -p "${BUILD_DIR}"
    - farm/configure --arch x86_64 --os alpine --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
    - cd "$BUILD_DIR"
    - python3 drake -j $(nproc) //build //tests
    - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - alpine
    - gcc

Alpine test:
  stage: test
  dependencies:
    - Alpine build
  script:
    - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
    - cd "${BUILD_DIR}"
    - python3 drake -j $(nproc) //check
    - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - alpine
    - gcc

Alpine install:
  stage: install
  dependencies:
    - Alpine test
  script:
    - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
    - time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
    - mkdir -p "${INSTALL_DIR}"
    - cd "${BUILD_DIR}"
    - python3 drake -j $(nproc) //install
    - TARBALL="$BUILD_DIR/elle-x86_64-alpine-gcc-$DESC.tbz"
    - tar $TARFLAGS -cjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
    - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
    - rm "$TARBALL"
    - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
  tags:
    - x86_64
    - alpine
    - gcc

# i386-jessie-gcc4:
#   stage: build
#   script:
#     - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
#     - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
#     - mkdir -p "$INSTALL_DIR"
#     - farm/configure --arch i386 --os jessie --compiler gcc4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
#     - cd "$BUILD_DIR"
#     - python3 drake -j $(nproc) //build
#     - python3 drake -j $(nproc) //check
#     - python3 drake -j $(nproc) //install
#     - TARBALL="$BUILD_DIR/elle-i386-jessie-gcc4-$DESC.tbz"
#     - tar $TARFLAGS -cjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
#     - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
#     - rm "$TARBALL"
#     - cd "$SOURCE_DIR"
#     - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
#   tags:
#     - i386
#     - jessie
#     - gcc4

# x86_64-windows-mingw4:
#   stage: build
#   script:
#     - time "$SOURCE_DIR/buildenv" --pick-build-tree --branch "$CI_BUILD_REF_NAME" --link-build-tree "$BUILD_DIR" --build-trees-root "/cache/$CI_PROJECT_NAME"
#     - if test -n "$FROM_SCRATCH"; then dir=$(realpath $BUILD_DIR); rm -rf "$dir" && mkdir -p "$dir"; else time "$SOURCE_DIR/buildenv" --cache-download-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose; fi
#     - mkdir -p "$INSTALL_DIR"
#     - farm/configure --arch x86_64 --os windows --compiler mingw4 --project Elle --source-dir "$SOURCE_DIR" --build-dir "$BUILD_DIR" --install-dir "$INSTALL_DIR"
#     - cd "$BUILD_DIR"
#     - python3 drake -j $(nproc) //build
#     - python3 drake -j $(nproc) //check
#     - python3 drake -j $(nproc) //install
#     - TARBALL="$BUILD_DIR/elle-x86_64-windows-mingw4-$DESC.tbz"
#     - tar $TARFLAGS -cjf "$TARBALL" -C "$INSTALL_DIR" . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
#     - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
#     - rm "$TARBALL"
#     - cd "$SOURCE_DIR"
#     - time "$SOURCE_DIR/buildenv" --cache-upload-build-tree --exclude='*.deb,*.rpm,*.tbz' --branch "$CI_BUILD_REF_NAME" --build-trees-root "/cache/$CI_PROJECT_NAME" --cache-namespace "$CI_RUNNER_DESCRIPTION/$CI_PROJECT_NAME" --cache-id "$CI_RUNNER_ID" --verbose
#   tags:
#     - x86_64
#     - windows
#     - mingw4

# x86_64-osx-clang:
#   stage: build
#   script:
#     - SOURCE_DIR=$PWD
#     - BUILD_DIR=$SOURCE_DIR/../elle-build
#     - INSTALL_DIR=$SOURCE_DIR/../elle-install
#     - if test -n "$FROM_SCRATCH"; then rm -rf $BUILD_DIR; fi
#     - mkdir -p $BUILD_DIR $INSTALL_DIR
#     - farm/configure --arch x86_64 --os osx --compiler clang --project Elle --source-dir $SOURCE_DIR --build-dir $BUILD_DIR --install-dir $INSTALL_DIR
#     - cd $BUILD_DIR && python3 drake -j 4 //build
#     - cd $BUILD_DIR && python3 drake -j 4 //check
#     - cd $BUILD_DIR && python3 drake -j 4 //install
#     - TARBALL=../elle-x86_64-osx-clang3-$DESC.tbz
#     - gtar $TARFLAGS -cjf "$TARBALL" -C $INSTALL_DIR . --show-transformed-names --transform "s,^\\./,elle-$DESC/,"
#     - scp "$TARBALL" buildslave@packages.infinit.sh:tmp
#     - rm "$TARBALL"
#   tags:
#     - x86_64
#     - osx
#     - clang
